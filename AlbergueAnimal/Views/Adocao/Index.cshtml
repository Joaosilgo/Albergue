@model IEnumerable<AlbergueAnimal.Models.Adocao>





@{
    ViewData["Title"] = "Adoção";
}

<br />
<p>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>

        <li class="breadcrumb-item active">@ViewData["Title"]</li>
    </ol>
</p>

<h2>Adoção</h2>

@if (User.IsInRole("Administrator"))
{
    <p>
        <a asp-action="Create">Registar Adoção</a> | <a asp-action="IndexEmProcessamento">Em Processamento</a> | <a asp-action="IndexArquivo">Arquivo</a>
    </p>


}
else
{
    <a asp-action="Create">Adotar Animal</a>
}

<table class="table">
    <thead>
        <tr>
            <th>
                Foto
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastUpdated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Arquivado)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Animal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Utilizador)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EstadoAdocao)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        if (item.Animal.imageContent != null && item.Animal.imageMimeType.Contains("image"))
                        {
                            string imageBase64 = Convert.ToBase64String(item.Animal.imageContent);
                            string imageSrc = string.Format("data:" + item.Animal.imageMimeType + ";base64,{0}", imageBase64);
                            <img src="@imageSrc" alt="Profile picture of @item.Animal.Nome" style=" width: 50px;height: 50px; border-radius: 50%; padding: 0;width: 50px;height: 50px; line-height: 50px;" class="img-responsive img-rounded" />
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastUpdated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Arquivado)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Animal.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Utilizador.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EstadoAdocao.estado)
                </td>

                @if (User.IsInRole("Administrator"))
                {
                    <td>
                        <a>@Html.ActionLink("Imprimir", "PrintAdoptionSlip", new { id = item.AdocaoId })</a> |
                        <a asp-action="Edit" asp-route-id="@item.AdocaoId">Editar</a> |
                        <a asp-action="Details" asp-route-id="@item.AdocaoId">Detalhes</a> |
                        <a asp-action="Arquivar" asp-route-id="@item.AdocaoId">Arquivar</a>
                    </td>
                }

            </tr>
        }
    </tbody>
</table>



@using (Html.BeginForm())
{
    <p>
        Procurar: @Html.TextBox("SearchString")
        <button type="submit" class="btn btn-default">Procurar</button>
    </p>
}



@section Scripts{



    <script src="~/amcharts4/core.js"></script>
    <script src="~/amcharts4/charts.js"></script>
    <script src="~/amcharts4/themes/animated.js"></script>
    <link href="~/amcharts4/examples/javascript/donut-chart/index.css" rel="stylesheet" />
    <script>
        am4core.useTheme(am4themes_animated);

        var chart = am4core.create("chartdiv", am4charts.PieChart);


        chart.data = [{
            "country": "Pendente",
            "value":  @Model.Where(a => a.EstadoAdocao.estado.Equals("Pendente")).Where(z => z.Arquivado == false).ToList().LongCount()
        }, {
                "country": "Em Processamento",
            "value": @Model.Where(a => a.EstadoAdocao.estado.Equals("EmProcessamento")).Where(z => z.Arquivado == false).ToList().LongCount()
        }];

        chart.innerRadius = am4core.percent(50);

        var series = chart.series.push(new am4charts.PieSeries());
        series.dataFields.value = "value";
        series.dataFields.category = "country";

        series.slices.template.cornerRadius = 10;
        series.slices.template.innerCornerRadius = 7;

        // this creates initial animation
        series.hiddenState.properties.opacity = 1;
        series.hiddenState.properties.endAngle = -90;
        series.hiddenState.properties.startAngle = -90;

        chart.legend = new am4charts.Legend();
    </script>
}

@if (User.IsInRole("Administrator") || User.IsInRole("Gestor Adoções"))
{
    <!-- HTML -->
    <div id="chartdiv"></div>
}

<br />
